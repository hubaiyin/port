import * as echarts from "echarts";

export default {
    namespaced: true,
    state: {
        charts: [
            {
                title: 'CO2浓度',
                unit: 'ppm',
                names: ['浓度'],
                lineX: ['2023-09-28 17:01', '2023-09-28 17:02', '2023-09-28 17:03', '2023-09-28 17:04', '2023-09-28 17:05', '2023-09-28 17:06', '2023-09-28 17:07', '2023-09-28 17:08', '2023-09-28 17:09', '2023-09-28 17:10', '2023-09-28 17:11', '2023-09-28 17:12', '2023-09-28 17:13', '2023-09-28 17:14', '2023-09-28 17:15', '2023-09-28 17:16', '2023-09-28 17:17', '2023-09-28 17:18', '2023-09-28 17:19', '2023-09-28 17:20'],
                value: [
                    [34, 240, 303, 23, 95, 236, 217, 45, 159, 151, 231, 192, 453, 45, 165, 236, 345, 328, 129, 230],
                    // [360, 545, 80, 192, 330, 580, 192, 80, 250, 453, 352, 28, 625, 345, 65, 325, 468, 108, 253, 98]
                ]
            },
            {
                title: 'PM2.5含量',
                unit: 'Μg/m3',
                names: ['含量'],
                lineX: ['2023-09-28 17:01', '2023-09-28 17:05', '2023-09-28 17:08', '2023-09-28 17:11', '2023-09-28 17:14', '2023-09-28 17:17', '2023-09-28 17:20', '2023-09-28 17:23', '2023-09-28 17:27', '2023-09-28 17:30', '2023-09-28 17:33', '2023-09-28 17:37', '2023-09-28 17:40', '2023-09-28 17:43', '2023-09-28 17:46', '2023-09-28 17:49', '2023-09-28 17:52', '2023-09-28 17:55', '2023-09-28 17:58', '2023-09-28 18:01'],
                value: [
                    [34, 352, 54, 534, 195, 236, 45, 328, 159, 45, 231, 192, 453, 354, 165, 345, 21, 328, 129, 530],
                    // [360, 445, 80, 192, 230, 280, 192, 480, 250, 253, 162, 28, 325, 345, 65, 325, 468, 108, 253, 98],
                    // [160, 245, 210, 292, 330, 580, 322, 280, 150, 453, 452, 228, 125, 45, 165, 525, 168, 228, 413, 98],
                ]
            },
            {
                title: '水电导率',
                unit: 'S/m',
                names: ['电导率'],
                lineX: ['2023-09-28 17:01', '2023-09-28 17:02', '2023-09-28 17:03', '2023-09-28 17:04', '2023-09-28 17:05', '2023-09-28 17:06', '2023-09-28 17:07', '2023-09-28 17:08', '2023-09-28 17:09', '2023-09-28 17:10', '2023-09-28 17:11', '2023-09-28 17:12', '2023-09-28 17:13', '2023-09-28 17:14', '2023-09-28 17:15', '2023-09-28 17:16', '2023-09-28 17:17', '2023-09-28 17:18', '2023-09-28 17:19', '2023-09-28 17:20'],
                value: [
                    [56, 352, 303, 43, 95, 236, 217, 328, 159, 151, 231, 192, 34, 234, 165, 123, 23, 312, 129, 120],
                    // [360, 545, 80, 192, 330, 580, 192, 80, 250, 453, 352, 28, 625, 345, 65, 325, 468, 108, 253, 98],
                    // [40, 145, 340, 192, 130, 780, 123, 180, 50, 353, 152, 28, 325, 245, 65, 525, 268, 408, 153, 98],
                ]
            },
            {
                title: '总溶解固体含量',
                unit: 'mg/L',
                names: ['含量'],
                lineX: ['2023-09-28 17:01', '2023-09-28 17:02', '2023-09-28 17:03', '2023-09-28 17:04', '2023-09-28 17:05', '2023-09-28 17:06', '2023-09-28 17:07', '2023-09-28 17:08', '2023-09-28 17:09', '2023-09-28 17:10', '2023-09-28 17:11', '2023-09-28 17:12', '2023-09-28 17:13', '2023-09-28 17:14', '2023-09-28 17:15', '2023-09-28 17:16', '2023-09-28 17:17', '2023-09-28 17:18', '2023-09-28 17:19', '2023-09-28 17:20'],
                value: [
                    [451, 352, 303, 534, 95, 332, 217, 328, 159, 151, 231, 192, 65, 524, 165, 53, 234, 312, 129, 230],
                    // [360, 545, 80, 192, 330, 580, 192, 80, 250, 453, 352, 28, 625, 345, 65, 325, 468, 108, 253, 98]
                ]
            },
            {
                title: '浊度',
                unit: 'JTU',
                names: ['浊度'],
                lineX: ['2023-09-28 17:01', '2023-09-28 17:02', '2023-09-28 17:03', '2023-09-28 17:04', '2023-09-28 17:05', '2023-09-28 17:06', '2023-09-28 17:07', '2023-09-28 17:08', '2023-09-28 17:09', '2023-09-28 17:10', '2023-09-28 17:11', '2023-09-28 17:12', '2023-09-28 17:13', '2023-09-28 17:14', '2023-09-28 17:15', '2023-09-28 17:16', '2023-09-28 17:17', '2023-09-28 17:18', '2023-09-28 17:19', '2023-09-28 17:20'],
                value: [
                    [233, 352, 231, 534, 95, 236, 217, 32, 159, 151, 64, 192, 453, 524, 165, 32, 321, 328, 129, 541],
                    // [360, 545, 80, 192, 330, 580, 192, 80, 250, 453, 352, 28, 625, 345, 65, 325, 468, 108, 253, 98]
                ]
            },
            {
                title: '温度',
                unit: '摄氏度℃',
                names: ['温度'],
                lineX:['2023-09-28 17:01', '2023-09-28 17:02', '2023-09-28 17:03', '2023-09-28 17:04', '2023-09-28 17:05', '2023-09-28 17:06', '2023-09-28 17:07', '2023-09-28 17:08', '2023-09-28 17:09', '2023-09-28 17:10', '2023-09-28 17:11', '2023-09-28 17:12', '2023-09-28 17:13', '2023-09-28 17:14', '2023-09-28 17:15', '2023-09-28 17:16', '2023-09-28 17:17', '2023-09-28 17:18', '2023-09-28 17:19', '2023-09-28 17:20'],
                value: [
                    [21, 23, 25, 20, 26, 21, 23, 22, 25, 19, 28, 32, 31, 27, 25, 28, 31, 19, 21, 23],
                    // [360, 545, 80, 192, 330, 580, 192, 80, 250, 453, 352, 28, 625, 345, 65, 325, 468, 108, 253, 98]
                ]
            },
        ],
        // data: [{
        //     title: {
        //         text: 'Stacked Line',
        //         textStyle: {
        //             color: '#fff'
        //         },
        //         show: false
        //     },
        //     tooltip: {
        //         trigger: 'axis',
        //     },
        //     legend: {
        //         data: ['Email', 'Union Ads', 'Video ßAds', 'Direct', 'Search Engine'],
        //         textStyle: {
        //             color: '#fff',
        //             fontSize: '15px',
        //         },
        //         top: '8%',
        //     },
        //     grid: {
        //         left: '3%',
        //         right: '4%',
        //         bottom: '0%',
        //         containLabel: true
        //     },
        //     toolbox: {
        //         feature: {
        //             saveAsImage: {}
        //         },
        //         right: '2%',
        //         iconStyle: {

        //         }
        //     },
        //     xAxis: {
        //         type: 'category',
        //         boundaryGap: false,
        //         data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
        //         axisLine: {
        //             show: true,
        //             lineStyle: {
        //                 color: '#5dcaec',
        //                 width: 2
        //             }
        //         }
        //     },
        //     yAxis: {
        //         type: 'value',
        //         splitLine: {
        //             show: false // 不显示分段线
        //         },
        //         axisLine: {
        //             show: true,
        //             lineStyle: {
        //                 color: '#5dcaec',
        //                 width: 2
        //             }
        //         }
        //     },
        //     series: [
        //         {
        //             name: 'Email',
        //             type: 'line',
        //             stack: 'Total',
        //             data: [120, 132, 101, 134, 90, 230, 210]
        //         },
        //         {
        //             name: 'Union Ads',
        //             type: 'line',
        //             stack: 'Total',
        //             data: [220, 182, 191, 234, 290, 330, 310]
        //         },
        //         {
        //             name: 'Video Ads',
        //             type: 'line',
        //             stack: 'Total',
        //             data: [150, 232, 201, 154, 190, 330, 410]
        //         },
        //         {
        //             name: 'Direct',
        //             type: 'line',
        //             stack: 'Total',
        //             data: [320, 332, 301, 334, 390, 330, 320]
        //         },
        //         {
        //             name: 'Search Engine',
        //             type: 'line',
        //             stack: 'Total',
        //             data: [820, 932, 901, 934, 1290, 1330, 1320]
        //         }
        //     ]
        // },

        // ],
        color: ['rgb(0, 201, 157', 'rgb(255, 242, 0', 'rgb(255, 77, 77']
    },
    actions: {

    },
    mutations: {

    },
    getters: {
        datas(state) {
            let arr = state.charts.map(item => {
                let lineY = []
                let color = state.color;
                for (let i = 0; i < item.names.length; i++) {
                    let x = i
                    if (x > color.length - 1) {
                        x = color.length - 1
                    }
                    let data = {
                        name: item.names[i],
                        type: 'line',
                        color: color[x] + ')',
                        // smooth: true,
                        areaStyle: {
                            normal: {
                                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                                    offset: 0,
                                    color: color[x] + ', 0.3)'
                                }, {
                                    offset: 0.8,
                                    color: color[x] + ', 0)'
                                }], false),
                                shadowColor: 'rgba(0, 0, 0, 0.1)',
                                shadowBlur: 10
                            }
                        },
                        symbol: 'circle',
                        symbolSize: 5,
                        data: item.value[i],
                        markPoint: {
                            data: [{ type: 'max', name: 'Max' }, { type: 'min', name: 'Min' }]
                        }
                    }
                    lineY.push(data)
                }

                return {
                    title: {
                        text: item.title,
                        textStyle: {
                            color: '#fff'
                        },
                        show: false
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        data: item.names,
                        textStyle: {
                            fontSize: 12,
                            color: 'rgb(0,253,255,0.6)'
                        },
                        // right: '4%'
                        top: '9.5%'
                    },
                    toolbox: {
                        feature: {
                            saveAsImage: {},
                            dataZoom: {
                                yAxisIndex: 'none'
                            },
                        },
                        right: '2%',
                        iconStyle: {

                        }
                    },
                    dataZoom: [
                        {
                            type: 'inside',
                            throttle: 20
                        }
                    ],
                    grid: {
                        left: '3%',
                        right: '4%',
                        bottom: '0',
                        containLabel: true
                    },
                    xAxis: {
                        type: 'category',
                        boundaryGap: false,
                        data: item.lineX,
                        axisLabel: {
                            textStyle: {
                                color: 'rgb(0,253,255,0.6)'
                            },
                            formatter: function (params) {
                                return params.split(' ')[0] + '\n' + params.split(' ')[1]
                            }
                        },
                        axisLine: {
                            show: true,
                            lineStyle: {
                                color: 'rgb(0,253,255,0.6)',
                                width: 2
                            }
                        }
                    },
                    yAxis: {
                        name: item.unit,
                        type: 'value',
                        axisLabel: {
                            formatter: '{value}',
                            textStyle: {
                                color: 'rgb(0,253,255,0.6)'
                            }
                        },
                        splitLine: {
                            lineStyle: {
                                color: 'rgb(23,255,243,0.3)'
                            }
                        },
                        axisLine: {
                            show: true,
                            lineStyle: {
                                color: 'rgb(0,253,255,0.6)',
                                width: 2
                            }
                        }
                    },
                    series: lineY
                }
            })
            return arr;
        }
    }
}